definitions:
  controller.ResponseTask:
    properties:
      description:
        type: string
      isDone:
        type: boolean
    type: object
  controller.detailResponseRoom:
    properties:
      endAt:
        type: string
      goal:
        type: string
      id:
        type: integer
      musicUrl:
        type: string
      name:
        type: string
      startAt:
        type: string
      tasks:
        description: Tasks    createdByMappedTasks `json:"tasks"`
        items:
          $ref: '#/definitions/entity.Task'
        type: array
    type: object
  controller.listResponseRoom:
    properties:
      rooms:
        items:
          $ref: '#/definitions/controller.responseRoom'
        type: array
    type: object
  controller.patchRequestTask:
    properties:
      description:
        type: string
      isDone:
        type: boolean
    type: object
  controller.patchResponseTask:
    properties:
      createdBy:
        type: string
      description:
        type: string
      isDone:
        type: boolean
      roomID:
        type: integer
    type: object
  controller.postRequestRoom:
    properties:
      endAt:
        type: string
      goal:
        type: string
      musicUrl:
        type: string
      name:
        type: string
      password:
        type: string
      startAt:
        type: string
    type: object
  controller.postRequestTask:
    properties:
      createdBy:
        type: string
      description:
        type: string
    type: object
  controller.postResponseRoom:
    properties:
      roomId:
        type: integer
    type: object
  controller.postResponseTask:
    properties:
      taskId:
        type: integer
    type: object
  controller.responseRoom:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      startEnd:
        type: string
      taskProgress:
        type: integer
    type: object
  entity.Task:
    properties:
      createdAt:
        type: string
      createdBy:
        description: user nickname temporary
        type: string
      description:
        type: string
      id:
        type: integer
      isDone:
        type: boolean
      roomID:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /rooms:
    get:
      consumes:
      - application/json
      description: 방 리스트
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.listResponseRoom'
        "400":
          description: ""
      summary: List rooms
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: 방 생성
      parameters:
      - description: 방 생성요청 body
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/controller.postRequestRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.postResponseRoom'
        "400":
          description: ""
      summary: create a room
      tags:
      - rooms
  /rooms/{id}:
    get:
      consumes:
      - application/json
      description: 룸 상세
      parameters:
      - description: 방 ID
        format: uint
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.detailResponseRoom'
        "400":
          description: ""
      summary: get a room
      tags:
      - rooms
  /rooms/{room_id}/tasks:
    get:
      consumes:
      - application/json
      description: 닉네임을 통한 태스크들 검색
      parameters:
      - description: who created task
        in: query
        name: created_by
        required: true
        type: string
      - description: room ID
        in: path
        name: room_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.ResponseTask'
            type: array
        "400":
          description: ""
      summary: Search Tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: 태스크 생성
      parameters:
      - description: room ID
        in: path
        name: room_id
        required: true
        type: integer
      - description: 태스크 생성요청 body
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/controller.postRequestTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.postResponseTask'
        "400":
          description: ""
      summary: create a task
      tags:
      - tasks
  /rooms/{room_id}/tasks/{task_id}:
    patch:
      consumes:
      - application/json
      description: |-
        태스크 업데이트
        1. 목표를 클릭 했을 때 task의 isDone을 변경해달라고 요청 시 사용
        2. 목표의 내용을 수정하고 싶을 때 description 수정
      parameters:
      - description: room ID
        in: path
        name: room_id
        required: true
        type: integer
      - description: task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: 태스크 수정 요청 body
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controller.patchRequestTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.patchResponseTask'
        "400":
          description: ""
      summary: update a task
      tags:
      - tasks
swagger: "2.0"
