// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://minkj1992.github.io",
            "email": "minkj1992@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/rooms": {
            "get": {
                "description": "방 리스트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "List rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.listResponseRoom"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "방 생성",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "create a room",
                "parameters": [
                    {
                        "description": "방 생성요청 body",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.postRequestRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.postResponseRoom"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "description": "룸 상세",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "get a room",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint",
                        "description": "방 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.detailResponseRoom"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{room_id}/tasks": {
            "get": {
                "description": "닉네임을 통한 태스크들 검색",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Search Tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "who created task",
                        "name": "created_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controller.ResponseTask"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "태스크 생성",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "create a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "태스크 생성요청 body",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.postRequestTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.postResponseTask"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/rooms/{room_id}/tasks/{task_id}": {
            "patch": {
                "description": "태스크 업데이트\n1. 목표를 클릭 했을 때 task의 isDone을 변경해달라고 요청 시 사용\n2. 목표의 내용을 수정하고 싶을 때 description 수정",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "update a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "태스크 수정 요청 body",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.patchRequestTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.patchResponseTask"
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ResponseTask": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                }
            }
        },
        "controller.detailResponseRoom": {
            "type": "object",
            "properties": {
                "endAt": {
                    "type": "string"
                },
                "goal": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "musicUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "tasks": {
                    "description": "Tasks    createdByMappedTasks ` + "`" + `json:\"tasks\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Task"
                    }
                }
            }
        },
        "controller.listResponseRoom": {
            "type": "object",
            "properties": {
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.responseRoom"
                    }
                }
            }
        },
        "controller.patchRequestTask": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                }
            }
        },
        "controller.patchResponseTask": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "roomID": {
                    "type": "integer"
                }
            }
        },
        "controller.postRequestRoom": {
            "type": "object",
            "properties": {
                "endAt": {
                    "type": "string"
                },
                "goal": {
                    "type": "string"
                },
                "musicUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                }
            }
        },
        "controller.postRequestTask": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "controller.postResponseRoom": {
            "type": "object",
            "properties": {
                "roomId": {
                    "type": "integer"
                }
            }
        },
        "controller.postResponseTask": {
            "type": "object",
            "properties": {
                "taskId": {
                    "type": "integer"
                }
            }
        },
        "controller.responseRoom": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "goal": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "startEnd": {
                    "type": "string"
                },
                "taskProgress": {
                    "type": "integer"
                }
            }
        },
        "entity.Task": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "description": "user nickname temporary",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDone": {
                    "type": "boolean"
                },
                "roomID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Pitch API Server (dobby's)",
	Description:      "This is a pitch api server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
